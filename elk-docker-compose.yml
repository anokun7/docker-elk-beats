version: "3.3"

services:
  web:
    image: dockersuccess/webserver:latest
    environment:
      app_url: kibana:5601
    deploy:
      replicas: 2
    ports:
      - "2000:2015"
    networks:
      - frontend

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.1
#   ports:
#     - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    networks:
      - elk
      - frontend
    healthcheck:
      test: echo ">" /dev/tcp/0.0.0.0:5601 || exit 1
      interval: 30s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    command: elasticsearch -Enetwork.host=0.0.0.0 -Ediscovery.zen.ping.unicast.hosts=elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    volumes:
      - /tmp/esdata:/usr/share/elasticsearch/data:rw
    user: root
    networks:
      - elk
    healthcheck:
      test: curl -s http://localhost:9200/_cluster/health | egrep 'yellow|green'
      interval: 30s
      retries: 3

  logstash:
    image: docker.elastic.co/logstash/logstash:6.3.1
    command: sh -c "logstash -e 'input { syslog  { type => syslog port => 10514   } beats { port => 5044 } } output { stdout { codec => line } elasticsearch { hosts => [ \"elasticsearch\" ] } }'"
    ports:
      - "10514:10514/tcp"
      - "10514:10514/udp"
      - "12201:12201/udp"
      - "5044:5044/tcp"
    networks:
      - elk

  filebeat:
    image: docker.elastic.co/beats/filebeat:6.3.1
    volumes:
     - /var/tmp/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    deploy:
     mode: global
     update_config:
       parallelism: 2
       delay: 10s
     restart_policy:
       condition: on-failure
    networks:
       - elk

#volumes:
# esdata:
#   driver: local

networks:
  elk:
  frontend:
